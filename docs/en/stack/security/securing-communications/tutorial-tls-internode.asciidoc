[role="xpack"]
[testenv="trial"]
[[encrypting-internode]]
=== Encrypt internode communications  

In this tutorial, we are only using a single node cluster, but if you plan to 
add more nodes, you must ensure that communication between those nodes will be 
encrypted. 

Perform the following steps on each node in the cluster:

. Stop {es}. For example, if you installed {es} from an archive distribution, 
enter `Ctrl-C` on the command line. See 
{ref}/stopping-elasticsearch.html[Stopping {es}].

. Enable TLS for transport communications between nodes within the cluster. For 
example, add the following setting in the `ES_PATH_CONF/elasticsearch.yml` file:
+
--
[source,yaml]
----
xpack.security.transport.ssl.enabled: true  
----
--

. Configure each node in the cluster to identify itself using its signed
certificate. For example, add the following settings in the 
`ES_PATH_CONF/elasticsearch.yml` file, using the file and path names that you 
created in previous steps:
+
--
[source,yaml]
----
xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12 
xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12 
----

If you had a multi-node cluster and you created a separate certificate for each 
node, you must customize this path on each node. If the filename matches the 
node name, you can simply use the value `certs/${node.name}.p12`.

NOTE: The PKCS#12 keystore that is output by the `elasticsearch-certutil` 
command includes a CA certificate as a trusted certificate entry, thus the 
keystore can also be used as a truststore. If you use other tools to manage and 
generate your certificates, you might have different values for these settings.

--

. If you specified a password for the certificates, add that password to the 
{es} keystore.  For example: 
+
--
["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
./bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password
./bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password
----------------------------------------------------------------------
--

. Restart {es}. For example, if you installed {es} with a `.tar.gz` package, run 
the following command from the {es} directory:
+
--
["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
./bin/elasticsearch
----------------------------------------------------------------------

See {ref}/starting-elasticsearch.html[Starting {es}].  
--

//TBD: What impact should users see now that this is enabled? If a new node is 
//added that does not have TLS enabled, does it fail to join the cluster?

At this point, you have met the requirements to pass the 
{ref}/bootstrap-checks-xpack.html#_ssl_tls_check[TLS bootstrap check].

[role="xpack"]
[testenv="trial"]
[[encrypting-internode-communications]]
== Tutorial: Encrypting communications

In this tutorial, you learn how to encrypt traffic within an {es} cluster.

In 6.0 and later releases, if you have a gold or higher license and the {es}
{security-features} are enabled, you must configure SSL/TLS for
internode-communication.

NOTE: Single-node clusters that use a loopback interface do not have this
requirement.

[float]
[[encrypting-internode-prerequisites]]
=== Before you begin

Ideally, you should do this tutorial only after you complete the 
{stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}] and
<<security-getting-started>> tutorials. At a minimum, you must:

. Install and configure {es}, {kib}, {ls}, and {metricbeat} as described in 
{stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}].  

. Stop {ls}. The method for starting and stopping {ls} varies depending on whether 
you are running it from the command line or running it as a service. For example, 
if you are running {ls} from the command line, you can stop it by entering 
`Ctrl-C`. See {logstash-ref}/shutdown.html[Shutting down {ls}]. 

. Stop {metricbeat}. For example, enter `Ctrl-C` on the command line where it is 
running.

. Launch the {kib} web interface by pointing your browser to port 5601. For 
example, http://127.0.0.1:5601[http://127.0.0.1:5601].

. <<get-started-license,Install a trial license>>.

. <<get-started-enable-security,Enable security in {es}>>.

. <<get-started-built-in-users,Create passwords for built-in users>>.
+
--
NOTE: This section of the tutorial does not use the built-in `kibana`, 
`logstash_system`, and `beats_system` users. To learn more about those users, 
see <<built-in-users>>.

--

. <<get-started-kibana-user,Add the built-in user to {kib}>>.

. To verify that security is enabled, run the cat health API. For example:
+
--
[source,sh]
----------------------------------
curl -s -u elastic:<password> -X GET "http://localhost:9200/_cat/health?v"
----------------------------------

Supply a valid user ID (such as `elastic`) and password, such as the one you 
created in <<get-started-users>>. 

--

